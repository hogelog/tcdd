#!/bin/bash

if [ "$1" == "init" ]; then
  echo "source \"$0\""
  exit
fi

cddfile=~/.cdd
cddtmp=~/.cdd.tmp
if tmux list-windows >/dev/null 2>&1; then
  current_window=$(tmux list-windows | egrep '^[0-9]+: .+\*' | egrep -o '^[0-9]+')
fi

touch $cddfile

function cdd_cd() {
  IFS=$'\n' local windows=( $(cat $cddfile) )
  local target="$1"
  local window
  for window in "${windows[@]}"
  do
    if echo "$window" | egrep -q "^$target:"; then
      dir=$(echo "$window" | sed "s/$target://")
      break
    fi
  done
  echo "cd $dir"
  cd $dir
}

function cdd_list() {
  cat $cddfile
}

function cdd_add() {
  cdd_rec "$1" "$(pwd)"
  egrep "^$1:" $cddfile
}

function cdd() {
  case "$1" in
    "list") cdd_list ;;
    "") cdd_list ;;
    "add") cdd_add "$2" ;;
    *) cdd_cd "$1" ;;
  esac
}

function cdd_rec() {
  local newline="$1:$2"
  sed "s|^$1:.*|$newline|" $cddfile > $cddtmp
  egrep -q "^$newline" $cddtmp || echo "$newline" >> $cddtmp
  sort $cddtmp > $cddfile
  rm $cddtmp
}

function cd() {
  builtin cd "$@"
  if [ "x${current_window}" != "x" ]; then
    cdd_rec "${current_window}" "$(pwd)"
  fi
}

__cdd_init_completion()
{
  COMPREPLY=()
  _get_comp_words_by_ref cur prev words cword
}

function _cdd_bash() {
  local cur prev words cword split

  if declare -F _init_completion >/dev/null 2>&1; then
    _init_completion
  else
    __cdd_init_completion
  fi

  case $cword in
    1)
      COMPREPLY=( $(compgen -W "$(echo add && echo list && cat $cddfile | egrep -o '^[^:]+')" -- "$cur") )
      ;;
  esac
}

if type complete >/dev/null; then
   complete -F _cdd_bash cdd
else
  # zsh completion is not implemented
  :
fi
